plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
    id 'net.darkhax.curseforgegradle'
    id "com.modrinth.minotaur"
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

apply from: rootProject.file('repositories.gradle')
apply from: 'dependencies.gradle'

loom {
    def aw = project(":kuma-api:common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }

    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }

    runs {
        client {
            client()
            setConfigName("fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
        }
        server {
            server()
            setConfigName("fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
        data {
            inherit client
            setConfigName("fabric Data")
            ideConfigGenerated(true)
            runDir("build/datagen")

            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${project(":kuma-api:common").file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"
        }
    }
}

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    dependsOn('build')
    description = 'Publishes the Fabric build to CurseForge.'
    group = 'publishing'

    apiToken = project.findProperty("curseforge.api_key") ?: System.getenv("CURSEFORGE_TOKEN") ?: "none"

    def mainFile = upload(curseforge_project_id, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
    mainFile.changelog = rootProject.file('CHANGELOG.md').text
    mainFile.addRequirement("fabric-api")
    project.minecraft_versions.split(',').toList().each { mainFile.addGameVersion(it) }
    mainFile.releaseType = "release"
}

modrinth {
    token = project.findProperty("modrinth.token") ?: System.getenv("MODRINTH_TOKEN") ?: "none"
    projectId = project.modrinth_project_id
    versionType = project.modrinth_release_type
    versionNumber = project.version + "+fabric-" + project.minecraft_version
    uploadFile = remapJar
    changelog = rootProject.file("CHANGELOG.md").text
    gameVersions = project.minecraft_versions.split(',').toList()
    syncBodyFrom = rootProject.file("modpage.md").text
    loaders = ['fabric']
    dependencies {
        required.project "fabric-api"
    }
}